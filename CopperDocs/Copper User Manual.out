\BOOKMARK [0][-]{chapter.1}{Introduction.}{}% 1
\BOOKMARK [1][-]{section.1.1}{Copper in a nutshell.}{chapter.1}% 2
\BOOKMARK [1][-]{section.1.2}{Example specification.}{chapter.1}% 3
\BOOKMARK [2][-]{subsection.1.2.1}{Overview of manual.}{section.1.2}% 4
\BOOKMARK [0][-]{chapter.2}{Copper's parsing algorithms.}{}% 5
\BOOKMARK [1][-]{section.2.1}{Context-aware scanning.}{chapter.2}% 6
\BOOKMARK [1][-]{section.2.2}{Specification of whitespace and other layout.}{chapter.2}% 7
\BOOKMARK [2][-]{subsection.2.2.1}{Layout in traditional tools.}{section.2.2}% 8
\BOOKMARK [2][-]{subsection.2.2.2}{How Copper handles layout.}{section.2.2}% 9
\BOOKMARK [2][-]{subsection.2.2.3}{How to specify layout in Copper.}{section.2.2}% 10
\BOOKMARK [3][-]{subsubsection.2.2.3.1}{Grammar layout.}{subsection.2.2.3}% 11
\BOOKMARK [3][-]{subsubsection.2.2.3.2}{Layout per production.}{subsection.2.2.3}% 12
\BOOKMARK [1][-]{section.2.3}{Lexical precedence paradigm.}{chapter.2}% 13
\BOOKMARK [2][-]{subsection.2.3.1}{Dominate/submit-lists.}{section.2.3}% 14
\BOOKMARK [2][-]{subsection.2.3.2}{Disambiguation functions/groups.}{section.2.3}% 15
\BOOKMARK [1][-]{section.2.4}{Transparent prefixes.}{chapter.2}% 16
\BOOKMARK [0][-]{chapter.3}{The CUP skin.}{}% 17
\BOOKMARK [1][-]{section.3.1}{Comments and whitespace.}{chapter.3}% 18
\BOOKMARK [1][-]{section.3.2}{Preamble.}{chapter.3}% 19
\BOOKMARK [1][-]{section.3.3}{Parser name.}{chapter.3}% 20
\BOOKMARK [1][-]{section.3.4}{Lexical syntax blocks.}{chapter.3}% 21
\BOOKMARK [2][-]{subsection.3.4.1}{Terminal class declarations.}{section.3.4}% 22
\BOOKMARK [2][-]{subsection.3.4.2}{Terminal declarations.}{section.3.4}% 23
\BOOKMARK [3][-]{subsubsection.3.4.2.1}{Semantic actions on terminals.}{subsection.3.4.2}% 24
\BOOKMARK [2][-]{subsection.3.4.3}{Disambiguation functions/groups.}{section.3.4}% 25
\BOOKMARK [1][-]{section.3.5}{Context-free syntax blocks.}{chapter.3}% 26
\BOOKMARK [2][-]{subsection.3.5.1}{Nonterminal/start-symbol declarations.}{section.3.5}% 27
\BOOKMARK [2][-]{subsection.3.5.2}{Operator precedence/associativity declarations.}{section.3.5}% 28
\BOOKMARK [2][-]{subsection.3.5.3}{Production declarations.}{section.3.5}% 29
\BOOKMARK [3][-]{subsubsection.3.5.3.1}{Semantic actions.}{subsection.3.5.3}% 30
\BOOKMARK [1][-]{section.3.6}{User code blocks.}{chapter.3}% 31
\BOOKMARK [2][-]{subsection.3.6.1}{Auxiliary.}{section.3.6}% 32
\BOOKMARK [2][-]{subsection.3.6.2}{Initialization.}{section.3.6}% 33
\BOOKMARK [1][-]{section.3.7}{Parser attributes.}{chapter.3}% 34
\BOOKMARK [0][-]{chapter.4}{Running Copper.}{}% 35
\BOOKMARK [1][-]{section.4.1}{Requirements.}{chapter.4}% 36
\BOOKMARK [1][-]{section.4.2}{Command-line interface.}{chapter.4}% 37
\BOOKMARK [2][-]{subsection.4.2.1}{Quick-start.}{section.4.2}% 38
\BOOKMARK [2][-]{subsection.4.2.2}{Switches.}{section.4.2}% 39
\BOOKMARK [3][-]{subsubsection.4.2.2.1}{-?.}{subsection.4.2.2}% 40
\BOOKMARK [3][-]{subsubsection.4.2.2.2}{-version.}{subsection.4.2.2}% 41
\BOOKMARK [3][-]{subsubsection.4.2.2.3}{-package.}{subsection.4.2.2}% 42
\BOOKMARK [3][-]{subsubsection.4.2.2.4}{-parser.}{subsection.4.2.2}% 43
\BOOKMARK [3][-]{subsubsection.4.2.2.5}{-o.}{subsection.4.2.2}% 44
\BOOKMARK [3][-]{subsubsection.4.2.2.6}{-q , -v, and -vv.}{subsection.4.2.2}% 45
\BOOKMARK [3][-]{subsubsection.4.2.2.7}{-mda.}{subsection.4.2.2}% 46
\BOOKMARK [3][-]{subsubsection.4.2.2.8}{-logfile.}{subsection.4.2.2}% 47
\BOOKMARK [3][-]{subsubsection.4.2.2.9}{-dump, -errordump, -dumpfile, -dumptype.}{subsection.4.2.2}% 48
\BOOKMARK [3][-]{subsubsection.4.2.2.10}{-pipeline.}{subsection.4.2.2}% 49
\BOOKMARK [3][-]{subsubsection.4.2.2.11}{-skin, -engine.}{subsection.4.2.2}% 50
\BOOKMARK [1][-]{section.4.3}{Copper ANT task and API.}{chapter.4}% 51
\BOOKMARK [1][-]{section.4.4}{Format of the Copper grammar dump.}{chapter.4}% 52
\BOOKMARK [2][-]{subsection.4.4.1}{Text dump.}{section.4.4}% 53
\BOOKMARK [3][-]{subsubsection.4.4.1.1}{Terminals, nonterminals, productions, LALR\(1\) DFA.}{subsection.4.4.1}% 54
\BOOKMARK [3][-]{subsubsection.4.4.1.2}{Lexical precedence graph.}{subsection.4.4.1}% 55
\BOOKMARK [3][-]{subsubsection.4.4.1.3}{Disambiguation functions/groups.}{subsection.4.4.1}% 56
\BOOKMARK [3][-]{subsubsection.4.4.1.4}{Parse table.}{subsection.4.4.1}% 57
\BOOKMARK [2][-]{subsection.4.4.2}{HTML dump.}{section.4.4}% 58
\BOOKMARK [1][-]{section.4.5}{Grammar troubleshooting.}{chapter.4}% 59
\BOOKMARK [2][-]{subsection.4.5.1}{Heap overflow.}{section.4.5}% 60
\BOOKMARK [2][-]{subsection.4.5.2}{``Cyclic precedence relation involving terminals ...''}{section.4.5}% 61
\BOOKMARK [2][-]{subsection.4.5.3}{Parse table conflict.}{section.4.5}% 62
\BOOKMARK [2][-]{subsection.4.5.4}{Lexical ambiguity.}{section.4.5}% 63
\BOOKMARK [0][-]{chapter.5}{Running a Copper parser.}{}% 64
\BOOKMARK [1][-]{section.5.1}{Requirements.}{chapter.5}% 65
\BOOKMARK [1][-]{section.5.2}{Constructors.}{chapter.5}% 66
\BOOKMARK [1][-]{section.5.3}{parse\(\) methods.}{chapter.5}% 67
\BOOKMARK [1][-]{section.5.4}{The class RunParser.}{chapter.5}% 68
\BOOKMARK [0][-]{appendix.A}{CUP skin grammar.}{}% 69
\BOOKMARK [1][-]{section.A.1}{Lexical syntax.}{appendix.A}% 70
\BOOKMARK [1][-]{section.A.2}{Context-free syntax.}{appendix.A}% 71
\BOOKMARK [2][-]{subsection.A.2.1}{Specification syntax.}{section.A.2}% 72
\BOOKMARK [2][-]{subsection.A.2.2}{Regex bridge syntax.}{section.A.2}% 73
\BOOKMARK [2][-]{subsection.A.2.3}{Regex syntax.}{section.A.2}% 74
\BOOKMARK [0][-]{appendix.B}{``Mini-Java'' example specification.}{}% 75
\BOOKMARK [0][-]{appendix.C}{License.}{}% 76
